snippet run_cmd
import subprocess

def run_cmd(cmd):
    subprocess.call(cmd, shell=True)

endsnippet

snippet exit
import os
import sys

os._exit(0) #hard exit
sys.exit(0) #raise an exception
endsnippet

snippet readlines
lines = open(filename).read().splitlines()
endsnippet

snippet regex
if re.match(regex, str):
endsnippet

snippet mongodb
from pymongo import MongoClient

client = MongoClient("mongodb://localhost:27017")
db = client['feeds']
col = db['metascan_hashes']
cursor = col.find({"sha1":"123"})

for document in cursor:
    sha = document["sha1"]
endsnippet

snippet httpget
import requests
parsed=requests.get("http://www.site.com", headers={"name":value}).json()
endsnippet

snippet hashfile
import hashlib
sha1=hashlib.sha1(open(full_path, 'rb').read()).hexdigest().upper()
endsnippet

snippet map
output_list = list(map(lambda x: int(x), input_list))
output_list = [int(x) for x in input_list]
endsnippet

snippet grep
output_list = list(filter(lambda x: x < 0, input_list))
output_list = [x for x in input_list if x < 0]
endsnippet

snippet readjson
with open(file_input) as data_file:
    data = json.load(data_file)
endsnippet

snippet shebang
#!/usr/bin/python3
endsnippet

snippet parseargs
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("input_string", help="the string that will be used")
parser.add_argument("times_written", help="number of times string repeated", type=int)
parser.add_argument("-c", "--caps", action="store_true", help="convert the string uppercase")
args = parser.parse_args()
result = args.input_string * args.times_written
if args.caps :
    result = result.upper()

print(result)
#./script cactus 3 -c
endsnippet

snippet named_args
def some_function_nodefaults(*, arg1, arg2):
	return arg1 + arg2
def some_function_defaults(*, arg1=1, arg2=10):
	return arg1 + arg2
print(some_function_nodefaults(arg1=2, arg2=20))
print(some_function_defaults())
endsnippet
